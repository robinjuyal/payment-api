package com.paymentApi.service;

import java.util.List;
import java.util.UUID;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.paymentApi.entity.PaymentTransaction;
import com.paymentApi.repository.PaymentTransactionRepository;
import com.paymentApi.request.PaymentServiceRequest;
import com.paymentApi.response.PaymentServiceResponse;
import com.paymentApi.response.PaymentServiceResponse.PaymentInformation;
import com.paymentApi.response.PaymentServiceResponse.ResponseData;


@Service
public class PaymentService {

    @Autowired
    private PaymentTransactionRepository paymentRepository;
    
    @Autowired
    private ObjectMapper objectMapper;

    public PaymentServiceResponse processPayment(PaymentServiceRequest request) {
        try {
            // Create a new payment entity
            PaymentTransaction payment = new PaymentTransaction();
            
            // Set data from request
            if (request.getDetails() != null) {
                payment.setUserId(request.getDetails().getUser());
            }
            
            payment.setOrderIds(objectMapper.writeValueAsString(request.getOrderIds()));
            payment.setRequestMethod(request.getRequestMethod());
            payment.setPaymentModes(objectMapper.writeValueAsString(request.getPaymentMode()));
            payment.setLoopbackUrl(request.getLoopbackUrl());
        
            
            // Generate a dummy page link (in real-world, this would be generated by a payment gateway)
            String pageLink = "http://localhost:8082/s4/pg_view_object/" + UUID.randomUUID().toString();
            payment.setPageLink(pageLink);
            
            // Set status
            payment.setStatus("success");
            
            // Save to database
            paymentRepository.save(payment);
            
            // Create response
            ResponseData responseData = new ResponseData();
            responseData.setPageLink(pageLink);
            
            PaymentInformation paymentInfo = new PaymentInformation();
            paymentInfo.setPaymentMode("");
            paymentInfo.setGetBankAccountDetailsRow(null);
            paymentInfo.setModeAdditionalInfo("");
            
            responseData.setPaymentInformation(paymentInfo);
            
            return PaymentServiceResponse.success(responseData);
        } catch (Exception e) {
            return PaymentServiceResponse.error(List.of("Error processing payment: " + e.getMessage()));
        }
    }
}
